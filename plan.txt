SIMPLE IMAGE RESIZER - DEVELOPMENT PLAN
==========================================

GOAL: Build a dead-simple image resizer with minimal UI and basic animations

CORE FEATURES (MVP):
- Upload one image
- Resize to width/height in pixels
- Download result
- Clean, minimal interface
- 2-3 simple animations max

TECH STACK (Keep It Simple):
- Frontend: HTML5 + CSS3 + Vanilla JS (no frameworks)
- Backend: Node.js + Express + Sharp
- Hosting: Single server (no cloud storage)
- No user accounts initially
- No ads initially

DEVELOPMENT PHASES:

PHASE 1: BACKEND (2-3 hours)
----------------------------
1. Initialize Node.js project
   - npm init
   - npm install express sharp multer cors

2. Create server.js
   - Basic Express server
   - Single endpoint: POST /resize
   - Accept image + width/height params
   - Process with Sharp
   - Return processed image

3. Test with Postman/curl
   - Upload test images
   - Verify resizing works
   - Check different formats (jpg, png)

PHASE 2: FRONTEND (3-4 hours)
-----------------------------
1. Create index.html
   - Single page design
   - File input (drag/drop zone)
   - Width/height number inputs
   - Resize button
   - Download area (hidden initially)

2. Create style.css
   - Minimal, clean design
   - Center everything
   - Simple color scheme (white/gray/blue)
   - Responsive layout

3. Create script.js
   - Handle file selection
   - Show file preview
   - Send to backend
   - Handle download

PHASE 3: ANIMATIONS (1-2 hours)
-------------------------------
1. Upload animation
   - Fade in file preview
   - Simple scale effect on drag/drop

2. Processing animation
   - Loading spinner
   - "Processing..." text fade

3. Result animation
   - Slide down download section
   - Success checkmark

UI LAYOUT (SUPER SIMPLE):
------------------------
```
    [LOGO/TITLE]
    
    [DRAG & DROP AREA]
    or click to select
    
    Width: [___] Height: [___] pixels
    
    [RESIZE BUTTON]
    
    [DOWNLOAD SECTION - hidden initially]
```

ANIMATIONS TO INCLUDE:
- Drag/drop highlight (border glow)
- Button hover effects
- Loading spinner
- Slide-down result section

WHAT WE'RE NOT DOING (Keep Simple):
- Multiple file upload
- Format conversion
- Quality settings
- User accounts
- Payment system
- Complex animations
- Frameworks/libraries

FILES STRUCTURE:
```
pixscaler/
├── server.js
├── package.json
├── public/
│   ├── index.html
│   ├── style.css
│   └── script.js
└── uploads/ (temp folder)
```

DEPLOYMENT PLAN:
- Start with local development
- Deploy to simple VPS (DigitalOcean/Heroku)
- Single server, no fancy infrastructure

ESTIMATED TIME: 6-9 hours total
PRIORITY: Get working version first, polish later

NEXT STEPS AFTER MVP:
1. Add basic error handling
2. Add file size limits
3. Add format conversion
4. Consider monetization
5. Add user accounts (much later)

KEEP IT SIMPLE PHILOSOPHY:
- If it's not essential, don't add it
- One feature at a time
- Clean code over clever code
- Working > Perfect 